sudo: required
dist: trusty
group: deprecated-2017Q3
os: linux
language: generic


services:
  - docker

cache:
  apt: true
  ccache: true
  directories:
  - depends/built
  - depends/sdk-sources
  - "$HOME/.ccache"
env:
  global:
    # DOCKER_HUB_USER
    - secure: "djMbTFJVgSAm5if/3arNY+Ot02xN/UKw2s/MYKRF9XRplSYwZkmvuAU6CgfIoXUQY2S7P+pE0UrPJAAD6BMP4PG1stSM7gzia2R9TyybLpTJsCQDYOiwQDUn6zgV0V/7YibDnnLaPTYG2+mLdEfaP8M8ABLvIoFWssQdpSdZEHx/EM/95Juv3YrfbW2GMBiGdPb2vueRO5hjHVTvekcQ7193/ewl6w2FV0pszSZeTrex4+Yk4N/iBB2M/9hVQZ3i8Ip52nCxXV8UhaOKQyAsjXvaN7tGbknsdL3WpMjHpVDZ8tRgRMltUuBTQhbGUcBKgi6U9aaZKX2Yc15OVqJEbtLSVPPH0dD3YiIAPDF/xxYGCxC9LQP06JGy/jhNoO8Ok25suf+QTzBj5fNzud0qvpVVPSAjmxgkQxbCj8eiIjHHnRb8KD+RLK8DDNFYoydiCiVRxro4dc3KsFmTxBJEhrfnfJKHCypq1tWDTRi3a3a/f5dNLxMchCVTlLNqQbA8rBfeSYHn7SA8nypIzTmJyorBjH09+UQbo37qkYTZQXP9VApSVLxpVQeajthrXORY3o0qgsvTADbhSEo0Ulz5wlSGf4r8C4IF2NCfyZebmk+fKW6pHw4u3GcJCy13RNlLMDxzIsmhIsQAdSiWTAEU3uRxoypXFCM7Z0oNoz5NJvE="
    # DOCKER_HUB_PASSWORD
    - secure: "xe3W7pc3atQeZKuwnGQf6U9itY3ovEPSCsjM6F5B7NzqPS7z7F8nVUPtg1J+XOO62w5orfZYxZszwDOrD2oZ/FRORf/mSMW+aNmdSqQZXz4WSVyQgXxA7fDjYHd/yKtgJHH39rUMS76p1pl5M6TDRhjdtUNWSiAGefRAmuiXmEGlFTIQcD9nbfoPn4B5eeceAdl/NaNGIL+ei7mxQXlN2kg4K2RkPEJcgw1U7CB7AisDI4oeBIE3BFwbanmPp3jCwDSyAsRwKlKdtJ7yFOkPlz+kWdcokF5SHpks06MbZMTbarIS9f1dd6IdUK/TyJx5INO6twA1sIObeQwPHiPJoGsobHZyosGLfmpYeEetLgrbrf9bwv+/UX+PY9bpZ3GIZx79ydKE7/07DrvZmmoOBpXoDAo++oMi+kOWkbuUWOHZ4ShVPF/MffqOkcf1ECNil0tBjtKVlBRTeODkAMop2A+M25q0GqBJy8TOPwmD7zgwfNKU3rqsV7ogFrQ8gMGLf6xWtsUn7pWdBu+83KhvD6p09pQiNm8gW92ynBUvOtYq8FJ/j9O36+xeWPot1Pkg/lz86l0YZUKvNU6Iv0wsTku8Y/2LbZb2OziKkx3e7I8RoAJaHUeV9IktVxqQ//tYLotc+HJpettDk8r/fJt3KZPR9uCPdfhQ4ZogPBfrGM8="
    - MAKEJOBS=-j5
    - RUN_TESTS=false
    - CHECK_DOC=0
    - BOOST_TEST_RANDOM=1$TRAVIS_BUILD_ID
    - CCACHE_SIZE=400M
    - CCACHE_TEMPDIR=/tmp/.ccache-temp
    - CCACHE_COMPRESS=1
    - BASE_OUTDIR=$TRAVIS_BUILD_DIR/out
    - SDK_URL=https://bitcoincore.org/depends-sources/sdks
    - PYTHON_DEBUG=1
    - WINEDEBUG=fixme-all
    - DOCKER_BUILD=true

  matrix:
# ARM
    - HOST=arm-linux-gnueabihf PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-arm-linux-gnueabihf" DEP_OPTS="NO_QT=1" CHECK_DOC=1 GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Win32
    - HOST=i686-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-i686 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
# 32-bit + polis
    - HOST=i686-pc-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="g++-multilib bc python3-zmq" DEP_OPTS="NO_QT=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports LDFLAGS=-static-libstdc++" USE_SHELL="/bin/polis" PYZMQ=true
# Win64
    - HOST=x86_64-w64-mingw32 DPKG_ADD_ARCH="i386" DEP_OPTS="NO_QT=1" PPA="ppa:bitcoin/bitcoin" PACKAGES="python3 nsis g++-mingw-w64-x86-64 wine1.7 bc" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" MAKEJOBS="-j4"
# polisd
    - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1 DEBUG=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" CPPFLAGS="-DDEBUG_LOCKORDER -DENABLE_POLIS_DEBUG" PYZMQ=true
# No wallet
    - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="python3" DEP_OPTS="NO_WALLET=1" RUN_TESTS=true GOAL="install" BITCOIN_CONFIG="--enable-glibc-back-compat --enable-reduce-exports"
# Cross-Mac
    - HOST=x86_64-apple-darwin11 PPA="ppa:bitcoin/bitcoin" PACKAGES="cmake imagemagick libcap-dev librsvg2-bin libz-dev libbz2-dev libtiff-tools python3-dev" BITCOIN_CONFIG="--enable-gui --enable-reduce-exports" OSX_SDK=10.11 GOAL="deploy"
# polisd release build (for docker)
    - HOST=x86_64-unknown-linux-gnu PPA="ppa:bitcoin/bitcoin" PACKAGES="bc python3-zmq" DEP_OPTS="NO_QT=1 NO_UPNP=1" GOAL="install" BITCOIN_CONFIG="--enable-zmq --enable-glibc-back-compat --enable-reduce-exports" PYZMQ=true DOCKER_BUILD=true

before_install:
    - git clone https://github.com/dashpay/dash_hash
    - travis_retry sudo apt-get install python3-pip python3-dev
    - travis_retry sudo add-apt-repository ppa:ubuntu-wine/ppa -y
    - export PATH=$(echo $PATH | tr ':' "\n" | sed '/\/opt\/python/d' | tr "\n" ":" | sed "s|::|:|g")
install:
    - if [ "$PYZMQ" = "true" ]; then pip3 install pyzmq --user ; fi
    - if [ -n "$PPA" ]; then travis_retry sudo add-apt-repository "$PPA" -y; fi
    - if [ -n "$DPKG_ADD_ARCH" ]; then sudo dpkg --add-architecture "$DPKG_ADD_ARCH" ; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get update; fi
    - if [ -n "$PACKAGES" ]; then travis_retry sudo apt-get install --no-install-recommends --no-upgrade -qq $PACKAGES; fi
    - cd dash_hash && python3 setup.py install --user && cd ..
before_script:
    - unset CC; unset CXX
    - unset DISPLAY
    # Make sure stdout is in blocking mode. Otherwise builds will fail due to large writes to stdout
    # See https://github.com/travis-ci/travis-ci/issues/4704. If this gets fixed, this line can also be removed.
    - python3 -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
    #- if [ "$CHECK_DOC" = 1 ]; then contrib/devtools/check-doc.py; fi TODO reenable after all Bitcoin PRs have been merged and docs fully fixed
    - mkdir -p depends/SDKs depends/sdk-sources
    - if [ -n "$OSX_SDK" -a ! -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then curl --location --fail $SDK_URL/MacOSX${OSX_SDK}.sdk.tar.gz -o depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - if [ -n "$OSX_SDK" -a -f depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz ]; then tar -C depends/SDKs -xf depends/sdk-sources/MacOSX${OSX_SDK}.sdk.tar.gz; fi
    - make $MAKEJOBS -C depends HOST=$HOST $DEP_OPTS
script:
    - export TRAVIS_COMMIT_LOG=`git log --format=fuller -1`
    - if [ -n "$USE_SHELL" ]; then export CONFIG_SHELL="$USE_SHELL"; fi
    - OUTDIR=$BASE_OUTDIR/$TRAVIS_PULL_REQUEST/$TRAVIS_JOB_NUMBER-$HOST
    - BITCOIN_CONFIG_ALL="--disable-dependency-tracking --prefix=$TRAVIS_BUILD_DIR/depends/$HOST --bindir=$OUTDIR/bin --libdir=$OUTDIR/lib"
    - depends/$HOST/native/bin/ccache --max-size=$CCACHE_SIZE
    - test -n "$USE_SHELL" && eval '"$USE_SHELL" -c "./autogen.sh"' || ./autogen.sh
    - mkdir build && cd build
    - ../configure --cache-file=config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make distdir VERSION=$HOST
    - cd poliscore-$HOST
    - ./configure --cache-file=../config.cache $BITCOIN_CONFIG_ALL $BITCOIN_CONFIG || ( cat config.log && false)
    - make $MAKEJOBS $GOAL || ( echo "Build failure. Verbose build follows." && make $GOAL V=1 ; false )
    - export LD_LIBRARY_PATH=$TRAVIS_BUILD_DIR/depends/$HOST/lib
    - if [ "$RUN_TESTS" = "true" ]; then travis_wait 30 make $MAKEJOBS check VERBOSE=1; fi
    - if [ "$RUN_TESTS" = "true" ]; then qa/pull-tester/rpc-tests.py --coverage; fi
    - cd ../..
    - if [ "$DOCKER_BUILD" = "true" ]; then BUILD_DIR=build/poliscore-$HOST ./docker/build-docker.sh; fi
after_script:
    - echo $TRAVIS_COMMIT_RANGE
    - echo $TRAVIS_COMMIT_LOG
after_success:
    - if [ "$TRAVIS_PULL_REQUEST" = "false" -a "$TRAVIS_BRANCH" = "master" -a "$DOCKER_BUILD" = "false" ]; then docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD && ./docker/push-docker.sh; fi
